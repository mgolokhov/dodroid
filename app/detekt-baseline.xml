<?xml version="1.0" ?>
<SmellBaseline>
  <Blacklist></Blacklist>
  <Whitelist>
    <ID>EmptyDefaultConstructor:DebugFragment.kt$DebugFragment$()</ID>
    <ID>ForbiddenComment:QuestionDao.kt$QuestionDao$// TODO: migrate to ABORT strategy</ID>
    <ID>ForbiddenComment:QuizItem.kt$QuizItem$// TODO: convert sealed to classes or enums</ID>
    <ID>ForbiddenComment:QuizItem.kt$QuizItem$// TODO: make configurable, const</ID>
    <ID>ForbiddenComment:QuizPageFragment.kt$QuizPageFragment$// TODO: code smells - decision should be in viewModel</ID>
    <ID>ForbiddenComment:QuizRepository.kt$QuizRepository$// TODO: what's a proper handling of</ID>
    <ID>ForbiddenComment:SaveQuizResultUseCase.kt$SaveQuizResultUseCase$// TODO: dirty stub, replace with real logic</ID>
    <ID>ForbiddenComment:TagDao.kt$TagDao$// TODO: migrate to ABORT strategy</ID>
    <ID>MagicNumber:DeathStarLoader.kt$DeathStarLoader$0.1f</ID>
    <ID>MagicNumber:DeathStarLoader.kt$DeathStarLoader$0.2f</ID>
    <ID>MagicNumber:DeathStarLoader.kt$DeathStarLoader$0.3f</ID>
    <ID>MagicNumber:DeathStarLoader.kt$DeathStarLoader$0.4f</ID>
    <ID>MagicNumber:DeathStarLoader.kt$DeathStarLoader$0.55f</ID>
    <ID>MagicNumber:DeathStarLoader.kt$DeathStarLoader$0.65f</ID>
    <ID>MagicNumber:DeathStarLoader.kt$DeathStarLoader$0.6f</ID>
    <ID>MagicNumber:DeathStarLoader.kt$DeathStarLoader$0.75f</ID>
    <ID>MagicNumber:DeathStarLoader.kt$DeathStarLoader$0.7f</ID>
    <ID>MagicNumber:DeathStarLoader.kt$DeathStarLoader$0.85f</ID>
    <ID>MagicNumber:DeathStarLoader.kt$DeathStarLoader$0.8f</ID>
    <ID>MagicNumber:DeathStarLoader.kt$DeathStarLoader$0.9f</ID>
    <ID>MagicNumber:DeathStarLoader.kt$DeathStarLoader$100</ID>
    <ID>MagicNumber:DeathStarLoader.kt$DeathStarLoader$1000</ID>
    <ID>MagicNumber:DeathStarLoader.kt$DeathStarLoader$2.9f</ID>
    <ID>MagicNumber:DeathStarLoader.kt$DeathStarLoader$20f</ID>
    <ID>MagicNumber:DeathStarLoader.kt$DeathStarLoader$3.4f</ID>
    <ID>MagicNumber:DeathStarLoader.kt$DeathStarLoader$4</ID>
    <ID>MagicNumber:DeathStarLoader.kt$DeathStarLoader$5f</ID>
    <ID>MagicNumber:DeathStarLoader.kt$DeathStarLoader$8f</ID>
    <ID>MagicNumber:QuizSummaryFragment.kt$QuizSummaryFragment$100</ID>
    <ID>MagicNumber:QuizSummaryFragment.kt$QuizSummaryFragment$2000</ID>
    <ID>MagicNumber:QuizSummaryFragment.kt$QuizSummaryFragment$3_000L</ID>
    <ID>MagicNumber:QuizSummaryFragment.kt$QuizSummaryFragment$40</ID>
    <ID>MagicNumber:QuizSummaryFragment.kt$QuizSummaryFragment$41</ID>
    <ID>MagicNumber:QuizSummaryFragment.kt$QuizSummaryFragment$70</ID>
    <ID>MagicNumber:QuizSummaryFragment.kt$QuizSummaryFragment$71</ID>
    <ID>MagicNumber:QuizSummaryFragment.kt$QuizSummaryFragment$99</ID>
    <ID>MagicNumber:SoundPlayer.kt$SoundPlayer$0.04f</ID>
    <ID>MaxLineLength:DeathStarLoader.kt$DeathStarLoader$amplitudeRatio = if (amplitudeRatioAttr &gt; DEFAULT_AMPLITUDE_RATIO) DEFAULT_AMPLITUDE_RATIO else amplitudeRatioAttr</ID>
    <ID>MaxLineLength:DeathStarLoader.kt$DeathStarLoader$canvas.drawLine(beginX.toFloat(), waveY[(beginX + wave2Shift) % endX], beginX.toFloat(), endY.toFloat(), wavePaint)</ID>
    <ID>MaxLineLength:DeathStarLoader.kt$DeathStarLoader$val amplitudeRatioAttr = attributes.getFloat(R.styleable.DeathStarLoader_ds_wave_amplitude, DEFAULT_AMPLITUDE_RATIO)</ID>
    <ID>MaxLineLength:QuestionDao.kt$QuestionDao$@Query("select distinct Q.* from Question as Q inner join QuestionTagJoin as QTJ on Q.id = QTJ.questionId inner join Tag as T on T.id = QTJ.tagId where T.name = :tag")</ID>
    <ID>MaxLineLength:QuestionDao.kt$QuestionDao$@Query("update Question set wrongCounter = :wrongCount, rightCounter = :rightCount, studiedAt = :studiedAt where id = :id")</ID>
    <ID>MaxLineLength:QuizPageFragment.kt$QuizPageFragment$Timber.d("setupQuestion ${viewDataBinding.questionTextView.text} ${this.hashCode()} ${viewDataBinding.questionTextView.hashCode()}")</ID>
    <ID>MaxLineLength:QuizPageFragment.kt$QuizPageFragment$val answerViewVariant = AnswerItemBinding.inflate(layoutInflater, viewDataBinding.containerAnswerVariantsLinearLayout, false)</ID>
    <ID>MaxLineLength:QuizPageFragment.kt$QuizPageFragment$val label = viewDataBinding.questionTextView.text.toString() + data.getStringExtra(FeedbackDialogFragment.EXTRA_CAUSE)</ID>
    <ID>MaxLineLength:QuizSummaryFragment.kt$QuizSummaryFragment$val textSummaryAnimator = ObjectAnimator.ofPropertyValuesHolder(viewDataBinding.textSummary, alpha, scaleX, scaleY)</ID>
    <ID>MaxLineLength:QuizSummaryFragment.kt$QuizSummaryFragment$viewDataBinding.rightCnt.text = String.format(resources.getString(R.string.test_result_correct), it.getInt(RIGHT_CNT_KEY))</ID>
    <ID>MaxLineLength:QuizSummaryFragment.kt$QuizSummaryFragment$viewDataBinding.wrongCnt.text = String.format(resources.getString(R.string.test_result_wrong), it.getInt(WRONG_CNT_KEY))</ID>
    <ID>MaxLineLength:ScrollAwareFABBehavior.kt$ScrollAwareFABBehavior$return nestedScrollAxes == ViewCompat.SCROLL_AXIS_VERTICAL || super.onStartNestedScroll(coordinatorLayout, child, directTargetChild, target, nestedScrollAxes)</ID>
    <ID>ReturnCount:QuizPageFragment.kt$QuizPageFragment$override fun onOptionsItemSelected(menuItem: MenuItem): Boolean</ID>
    <ID>SpreadOperator:TopicViewModel.kt$TopicViewModel$(*topics.toTypedArray(), selected = selected)</ID>
    <ID>TooGenericExceptionCaught:SoundRepository.kt$SoundRepository$e: Exception</ID>
    <ID>TooGenericExceptionThrown:DebugFragment.kt$DebugFragment$throw RuntimeException("forced crash")</ID>
    <ID>TooManyFunctions:DeathStarLoader.kt$DeathStarLoader$DeathStarLoader</ID>
    <ID>TooManyFunctions:QuizMainViewModel.kt$QuizMainViewModel$QuizMainViewModel</ID>
    <ID>TooManyFunctions:QuizPageFragment.kt$QuizPageFragment$QuizPageFragment</ID>
    <ID>TooManyFunctions:QuizPageViewModel.kt$QuizPageViewModel$QuizPageViewModel</ID>
  </Whitelist>
</SmellBaseline>
